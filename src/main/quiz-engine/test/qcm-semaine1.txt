

>>Une servlet est un programme écrit en :<<
[ ] JavaScript
[x] Java
[ ] PHP
[ ] HTML

>>Une servlet est un programme qui s’exécute :<<
[ ] Ni sur le serveur, ni sur le client
[ ] A la fois côté client et côté serveur
[ ] Côté client dans un navigateur Internet
[x] Côté serveur dans un moteur de servlet

>>En pratique, une servlet est invoquée :<<
[ ] En lançant un programme dans un terminal
[ ] En instanciant une classe
[ ] Via le protocole FTP
[x] Via le protocole HTTP

>>Une servlet peut servir à générer :<<
[x] Une page HTML
[x] Un document PDF
[x] Une image
[x] Un flux audio

>>Une servlet est associée à un objet dit singleton car :<<
[ ] Une servlet traite la requête d’un client et est supprimée
[x] Une seule instance de la servlet est présente dans le moteur de servlets
[ ] Tout le contenu dynamique d’un site web doit être écrit dans une seule servlet
[ ] Une servlet ne peut traiter la requête que d’un seul client à la fois

>>La méthode getParameter permet de :<<
[ ] Récupérer les paramètres de fonctionnement du serveur Web
[ ] Configurer une servlet avec des options
[x] Récupérer le texte saisi dans un formulaire HTML
[ ] Récupérer des valeurs de paramètres issus d’en-têtes HTTP

>>Une JSP est un programme qui peut contenir du code :<<
[x] HTML
[x] JavaScript
[ ] PHP
[x] Java

>>Dans une JSP, les balises &lt;% et %&gt; permettent de :<<
[ ] Faire des opérations de comparaison de valeurs
[ ] Mettre en forme du texte
[x] Déclarer des blocs de code
[ ] Déclarer des commentaires

>>Dans une JSP, la balise &lt;%? :<<
[ ] Permet de demander à l’utilisateur de saisir un texte
[ ] Permet d’effectuer un test
[ ] Permet d’afficher la valeur d’une expression
[x] N’existe pas

>>Les variables prédéclarées suivantes existent en JSP :<<
[x] response
[x] session
[x] out
[ ] printIn

>>Les JSP et les servlets sont deux solutions :<<
[x] Qui permettent de mettre en place des pages web dynamiques
[ ] Qui n’ont aucun point en commun
[x] Qui sont invoquées via le protocole HTTP
[x] Qui utilisent toutes les deux le langage Java

>>Dans une servlet, la méthode doPost :<<
[x] A la même signature que la méthode service
[x] Permet de traiter le message POST du protocole HTTP
[ ] Permet d’envoyer un mail
[x] Permet de définir des traitements différents selon les requêtes HTTP

>>La notion de session :<<
[ ] Est nécessairement associée à un login et un mot de passe
[x] Permet de suivre l’activité d’un client
[x] Est identique pour les JSP et les servlet
[x] A une durée de vie maximale

>>Le mécanisme dit Request Dispatcher permet de :<<
[x] Transférer la réponse d’une servlet à une JSP
[x] Inclure le contenu désigné par un URL HTTP dans une servlet
[ ] Définir des priorités entre différentes requêtes HTTP
[ ] Envoyer la réponse d’une servlet

>>La méthode init d’une servlet :<<
[x] Est invoquée par le moteur de servlet
[ ] Remplace le constructeur de la classe de la servlet
[x] Définit des traitements d’initialisation de la servlet
[ ] Peut être appelée par le développeur lorsqu’il souhaite réinitialiser une servlet

>>Quel est le port par défaut sur lequel fonctionne HTTP ?<<
Réponse :
= 80

>>Par défaut, sur quel port Tomcat délivre-t-il son contenu ?<<
Réponse :
= 8080

